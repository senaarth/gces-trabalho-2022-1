version: "3.8"

services:
  database:
    container_name: database
    image: postgres:13.4-alpine
    restart: always
    user: postgres
    volumes:
      - pgdata:/var/lib/postgresql
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=library_db
    ports:
      - 5432:5432
    networks:
      - postgres
    
  backend: 
    container_name: backend
    build: 
      context: ./library_back
      dockerfile: Dockerfile
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - backend:/library_back/app
    ports:
      - 8000:8000
    depends_on:
      - "database"
    networks:
      - postgres

  frontend: 
    container_name: frontend
    build: 
      context: ./library_front
    command: npm start
    volumes:
      - frontend:/library_front/build
    ports:
      - 3000:3000
    depends_on:
      - "backend"
    networks:
      - postgres

  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - "frontend"
    networks:
      - postgres

volumes:
  pgdata:
  backend:
  frontend:

networks:
  postgres:
